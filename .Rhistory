install.packages("shiny")
library(shiny)
runApp("hackathon")
getwD()
getwd()
runApp()
runApp()
runApp()
install.packages("leaflet")
runApp()
runApp()
??DT
install.packages("DT")
??DT
runApp()
runApp()
head(faithful_)
head(faithful)
x
x    <- faithful[, 2]  # Old Faithful Geyser data
bins <- seq(min(x), max(x), length.out = input$bins + 1)
runApp()
runApp()
runApp()
runExample("06_tabsets")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
ls()
df <- diesease_list[[2]]
df <- disease_list[[2]]
df <- diseases[[2]]
head(df)
head(date)
head(date)
head(date)
head(date)
head(date)
class(date)
tail(date)
head(date)
class(date)
?as.Date
head(date)
head(date)
head(date)
class(df$WEEK)
head(date)
head(date)
df <- diseases[[2]]
head(date)
head(date)
head(date)
head(date)
head(date)
head(date)
head(date)
tail(date)
head(date)
disease_list<- lapply(diesase_list, function(df){
    df$WEEK <- ifelse(df$WEEK < 10, paste0("0", df$WEEK), df$WEEK)
    date <- paste(df$YEAR, df$WEEK, "7", sep="-")
    date <- as.Date(date, "%Y-%U-%u")
    df$date <- date
    return(df)
})

class(disease_list[[1]]$date)
names(disease_list)
names(disease_list)
disease_list<- lapply(diesase_list, function(df){
    df$WEEK <- ifelse(df$WEEK < 10, paste0("0", df$WEEK), df$WEEK)
    date <- paste(df$YEAR, df$WEEK, "7", sep="-")
    date <- as.Date(date, "%Y-%U-%u")
    df$date <- date
    return(df)
})

runApp()
runApp()
runApp()
traceback()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
head(df)
tail(date)
class(df$date)
tail(df$date)
head(date)
head(df_melt)
head(df_melt)
head(df)
rm(list=ls())
df <- disease[[2]]
head(df)
nms
melt_names
melt_names
head(df)
head(df_melt)
head(center_df)
colnames(usa_shape)
names(usa_shape)
head(center_df)
install.packages(c("gstat", "sp", "spacetime")
)
library(leaflet)
head(df)
head(mat)
head(mat)
class(mat)
?mat
?as.matrix
?as.matrix
head(mat)
dim(cor_mat)
colnames(mat)
head(melted_cormat)
?cor
head(cormat)
head(melted_cormat)
runApp()
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) + geom_tile(color="white") +
            scale_fill_gradient2(low = "blue", high = "red", mid = "white", 
                                 midpoint = 0, limit = c(-1,1), space = "Lab", 
                                 name="Pearson\nCorrelation") +
            theme_minimal()+ 
            theme(axis.text.x = element_text(angle = 45, vjust = 1, 
                                             size = 12, hjust = 1))+
            coord_fixed()
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) + geom_tile(color="white") +
            scale_fill_gradient2(low = "blue", high = "red", mid = "white", 
                                 midpoint = 0, limit = c(-1,1), space = "Lab", 
                                 name="Pearson\nCorrelation") +
            theme_minimal()+ 
            theme(axis.text.x = element_text(angle = 45, vjust = 1, 
                                             size = 12, hjust = 1))+
            coord_fixed()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
rm(list=ls())
head(df)
head(df)
        melted_cormat <- melt(cormat)
        melted_cormat <- melt(cormat)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
mat <- matrix(c(1,2, 2,1), nrow=2)
cor(mat)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?cor
runApp()
runApp()
?selectInput
?selectInput
runApp()
runApp()
colnames(df)
colnames(df)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?radioButtons
runApp()
runApp()
dip <- diseases['DIPHTHERIA']
head(dip)
head(dip)
dip <- diseases[['DIPHTHERIA']]
head(dip)
colnames(dip)
?rdist
install.packages("geosphere")
library(geosphere)
state_dist
center_df
class(center_df$Longitude)
head(state_dist)
head(center_df)
head(mat)
class(mat)
state_disT
state_dist
state_dist
state_dist
head(center_df)
dim(center_df)
r
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
dim(cormat)
dim(dists)
dim(state_dist)
head(center_df)
runApp()
runApp()
runApp()
print(state_dist)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
p
runApp()
runApp()
length(cors)
length(dist)
head(df)
head(my_df)
dim(my_df)
class(cors)
class(dist)
head(my_df)
dim(my_df)
p <- ggplot(my_df, aes(dist, cors)) + geom_point()
p
?labs
                print(p)
runApp()
                p <- ggplot(my_df, aes(dist, cors)) + geom_point(colour="orange", size=2) +
                    geom_smooth()+
                    theme_minimal()+ 
                  ggtitle(disease_name) + labs("Distance (Scaled)", "Correlation")
?geom_smooth
                p <- ggplot(my_df, aes(dist, cors)) + geom_point(colour="gold", size=2) +
                    geom_smooth(level=.999, colour="black", method="lm")+
                    theme_minimal()+ 
                  ggtitle(disease_name) + labs("Distance (Scaled)", "Correlation")
runApp()
runApp()
